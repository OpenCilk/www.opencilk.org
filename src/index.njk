---
title: Write fast code with C/C++ and OpenCilk.
layout: layouts/home.njk
eleventyNavigation:
  key: Home
  order: 1
hero:
  image: /img/OpenCilk-Logo-1001.png
  subtitle: The language of performance engineering
features:
- call: Write fast code
  call_description: Parallelize C/C++ with OpenCilk.
  call_color: var(--midnight)
  call_bg: var(--lime)
  button: Install
  button_link: /doc/users-guide/install/
  button_color: var(--yellow)
  button_bg: var(--blue)
  image_bg: var(--yellow)
  image: qsort-code-light.png
- call: Performance engineering
  call_description: What is it and why does it matter?
  call_color: var(--yellow)
  call_bg: var(--midnight)
  button: Learn
  button_link: /posts/
  button_color: var(--yellow)
  button_bg: var(--blue)
  image_bg: var(--midnight)
  image: plenty-of-room-at-the-top.png
- call: Teach performance
  call_description: OpenCilk provides an ideal introduction.
  call_color: var(--safetyyellow)
  call_bg: var(--darkteal)
  button: Discover
  button_link: /community/teach-performance/
  button_color: var(--midnight)
  button_bg: var(--yellow)
  image_bg: var(--teal)
  image: fib-code-multicore.png
- call: Go multicore
  call_description: Convert your code to OpenCilk
  call_color: var(--midnight)
  call_bg: var(--yellow)
  button: Here's how
  button_link: /doc/users-guide/convert-a-c-program/
  button_color: var(--yellow)
  button_bg: var(--blue)
  image_bg: var(--safetyyellow)
  image: fib-nocode-trace-dag.png

---

<img class="d-block pt-4 pb-4 mx-auto" src="{{ hero.image }}" width="440">
<div class="text-center" style="font-size: large;">
  <p class="mb-4 mx-auto">{{ metadata.tagline }}</p>
</div>

<div class="container px-4 mb-3" style="max-width: 1120px;">
  <div class="row justify-content-center g-5 ">

  {% for item in features %}
    <div class="col-md-6 rounded">
      <div class="row h-100 flex-row-reverse align-items-center rounded border shadow-lg" style="background-color: {{ item.image_bg }};">
        <div class="col-7 h-100 rounded m-0 p-0"
          style="background-image: url('img/{{ item.image }}'); background-size: cover;">
        </div>
        <div class="d-flex align-content-between flex-wrap  col-5 h-100 py-3 rounded" style="color: {{ item.call_color }}; background-color: {{ item.call_bg }};">
          <div class="d-flex"><h4 class="display-8 fw-bold lh-1 mt-0 mb-3">{{ item.call }}</h4></div>
          <div class="d-flex"><p class="lead">{{ item.call_description }}</p></div>
          <div class="d-flex"><a href="{{ item.button_link }}" class="btn border btn-lg px-4 me-md-2" style="color: {{ item.button_color }}; background-color: {{ item.button_bg }};">{{ item.button }}</a></div>
        </div>
      </div>
    </div>
  {% endfor %}

  </div>
</div>

<div class="mx-0 bg-white" style="border-top-style: solid; border-top-color: var(--lime);">
<div class="container py-4 px-4" style="max-width: 1120px;">
  <div class="row justify-content-center">
    <div class="col-12">
      <div class="text-center">
      <h1>{{ title }}</h1>
      </div>
      <p>OpenCilk is an open-source platform that makes parallel programming a simple extension of serial programming.</p>
      <ul>
        <li>Efficient compiling makes your OpenCilk program faster.</li>
        <li>Provably efficient scheduling tunes each execution of your OpenCilk program to its host environment.</li>
        <li>Provable race-detection guarantees that your OpenCilk program has a deterministic result.</li>
      </ul>
    </div>

    <h3 class="my-4">Featured blog posts</h3>
    <div class="container" id="featured-3">
      <div class="row g-2">
        {% set postslist = collections.featuredPosts %}
        {% include "posts_cards.njk" %}
      </div>
    </div>

  </div>
</div>
</div>
